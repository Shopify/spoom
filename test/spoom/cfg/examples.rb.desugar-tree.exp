class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Examples><<C <todo sym>>> < (::<todo sym>)
    def i_like_ifs<<todo method>>(&<blk>)
      if true
        return 1
      else
        return 2
      end
    end

    def i_like_exps<<todo method>>(&<blk>)
      if true
        1
      else
        2
      end
    end

    def return_in_one_branch1<<todo method>>(&<blk>)
      if true
        return 1
      else
        2
      end
    end

    def return_in_one_branch2<<todo method>>(&<blk>)
      if true
        1
      else
        return 2
      end
    end

    def variables<<todo method>>(&<blk>)
      begin
        if true
          a = 1
        else
          a = 2
        end
        if false
          b = 1
        else
          b = 2
        end
        a.+(b)
      end
    end

    def variables_and_loop<<todo method>>(cond, &<blk>)
      begin
        if true
          a = 1
        else
          a = 2
        end
        while true
          if cond
            b = 1
          else
            b = 2
          end
        end
        b
      end
    end

    def variables_loop_if<<todo method>>(cond, &<blk>)
      begin
        while true
          if cond
            b = 1
          else
            b = 2
          end
        end
        b
      end
    end

    def take_arguments<<todo method>>(i, &<blk>)
      if false
        2
      else
        i
      end
    end
  end
end
