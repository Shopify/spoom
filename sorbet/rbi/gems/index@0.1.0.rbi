# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `index` gem.
# Please instead update this file by running `bin/tapioca gem index`.


# source://index//../../index/lib/index/graph.rb#3
module Index; end

class Index::Declaration
  # source://index//../../index/lib/index.rb#6
  def initialize(_arg0, _arg1); end

  # source://index//../../index/lib/index.rb#6
  def definitions; end

  # source://index//../../index/lib/index.rb#6
  def inspect; end

  # source://index//../../index/lib/index.rb#6
  def name; end
end

class Index::Definition
  # source://index//../../index/lib/index.rb#6
  def initialize(_arg0, _arg1); end

  # source://index//../../index/lib/index.rb#6
  def inspect; end

  # source://index//../../index/lib/index.rb#6
  def kind; end

  # source://index//../../index/lib/index.rb#6
  def location; end

  # source://index//../../index/lib/index.rb#6
  def uri; end
end

# The global graph representing all declarations and their relationships for the workspace
#
# Note: this class is partially defined in C to integrate with the Rust backend
#
# source://index//../../index/lib/index/graph.rb#7
class Index::Graph
  # @return [Graph] a new instance of Graph
  #
  # source://index//../../index/lib/index/graph.rb#9
  def initialize(workspace_path: T.unsafe(nil)); end

  # source://index//../../index/lib/index.rb#6
  def declarations; end

  # source://index//../../index/lib/index.rb#6
  def index_all(_arg0); end

  # Index all files and dependencies of the workspace that exists in `@workspace_path`
  #
  # source://index//../../index/lib/index/graph.rb#15
  def index_workspace; end

  # source://index//../../index/lib/index.rb#6
  def set_configuration(_arg0); end

  private

  # Gathers the paths we have to index for all workspace dependencies
  #
  # source://index//../../index/lib/index/graph.rb#24
  def workspace_dependency_paths; end
end

# source://index//../../index/lib/index/version.rb#4
Index::VERSION = T.let(T.unsafe(nil), String)
